rule okta_user_login_out_of_hours {

  meta:
    author = "Chronicle Security"
    description = "Detects out of hours successful authentication."
    mitre_attack_tactic = "Defense Evasion, Persistence, Privilege Escalation, Initial Access"
    mitre_attack_technique = "Valid Accounts"
    mitre_attack_url = "https://attack.mitre.org/techniques/T1078/"
    mitre_attack_version = "v2.5"
    severity = "Low"
    priority = "Low"

  events:
    $login.metadata.product_name = "Okta"
    $login.metadata.vendor_name = "Okta"
    $login.metadata.event_type = "USER_LOGIN"
    $login.target.user.email_addresses = $user
    $login.security_result.action = "ALLOW"
    $login.metadata.event_timestamp.seconds = $timestamp

    (
        01 = timestamp.get_day_of_week($timestamp, "UTC") or //Sunday
        07 = timestamp.get_day_of_week($timestamp, "UTC")  //Saturday
    )

  match:
    $user over 1h

  outcome:
    $risk_score = max(
        if (01 = timestamp.get_day_of_week($timestamp, "UTC"), 10) +
        if (07 = timestamp.get_day_of_week($timestamp, "UTC"), 15) +
        if ( ( timestamp.get_hour($timestamp, "UTC") >= 0 and timestamp.get_hour($timestamp,"UTC")<= 7) or timestamp.get_hour($timestamp,"UTC") > 20, 50)
    )
    $principalIp = array_distinct($login.principal.ip)
    $principalIpCountry = array_distinct($login.principal.ip_geo_artifact.location.country_or_region)
    $principalIpState = array_distinct($login.principal.ip_geo_artifact.location.state)
    $principalIpCity = array_distinct($login.principal.location.city)
    $dcPrincipalIpCity = array_distinct($login.principal.location.city)
    $securityResultSummary = array_distinct($login.security_result.summary)
    $principalUserManagersEmailAddresses = array_distinct($login.principal.user.managers.email_addresses)
    $principalUserUserid = array_distinct($login.principal.user.userid)
    $dcPrincipalUserUserid = count_distinct($login.principal.user.userid)
    $targetUserEmailAddresses = array_distinct($login.target.user.email_addresses)
    $targetUserUserid = array_distinct($login.target.user.userid)
    $targetBrowser = array_distinct($login.network.http.parsed_user_agent.browser)
    $securityResultDescription = array_distinct($login.security_result.description)

  condition:
    $login
}
