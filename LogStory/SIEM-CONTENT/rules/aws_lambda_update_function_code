rule aws_lambda_update_function_code {

  meta:
    author = "Chronicle Security"
    description = "Detects an IAM user attempting to update/modify AWS lambda code."
    mitre_attack_tactic = "Execution"
    mitre_attack_technique = "Serverless Execution"
    mitre_attack_url = "https://attack.mitre.org/techniques/T1648/"
    mitre_attack_version = "v1.0"
    severity = "Low"
    priority = "Low"

  events:
    $cloudtrail.metadata.vendor_name = "AMAZON" 
    $cloudtrail.metadata.product_name = "AWS CloudTrail"
    $cloudtrail.metadata.product_event_type = /UpdateFunctionCode/
    $cloudtrail.security_result.action = "ALLOW"
    $cloudtrail.principal.user.userid = $user_id

  match:
    $user_id over 1h

  outcome:
    $risk_score = max(
        // Unauthorized geographies
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "Cuba", 40) +
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "Iran", 40) +
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "North Korea" , 40) +
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "Russia", 40) +
        if($cloudtrail.principal.ip_geo_artifact.location.country_or_region = "Syria", 40)
    )
    $networkHttpUserAgent = array_distinct($cloudtrail.network.http.user_agent)
    $principalIp = array_distinct($cloudtrail.principal.ip)
    $principalIpCountry = array_distinct($cloudtrail.principal.ip_geo_artifact.location.country_or_region)
    $principalIpState = array_distinct($cloudtrail.principal.ip_geo_artifact.location.state)
    $principalUserDisplayName = array_distinct($cloudtrail.principal.user.user_display_name)
    $awsAccount = array_distinct($cloudtrail.target.resource.attribute.labels["Recipient Account Id"])
    $awsRegion = array_distinct($cloudtrail.principal.location.name)

  condition:
    $cloudtrail
}
